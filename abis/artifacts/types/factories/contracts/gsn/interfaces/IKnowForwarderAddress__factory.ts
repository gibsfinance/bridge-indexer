/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IKnowForwarderAddress,
  IKnowForwarderAddressInterface,
} from "../../../../contracts/gsn/interfaces/IKnowForwarderAddress";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "getTrustedForwarder",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IKnowForwarderAddress__factory {
  static readonly abi = _abi;
  static createInterface(): IKnowForwarderAddressInterface {
    return new Interface(_abi) as IKnowForwarderAddressInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IKnowForwarderAddress {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IKnowForwarderAddress;
  }
}
