/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IRelayHub,
  IRelayHubInterface,
} from "../../../../contracts/gsn/interfaces/IRelayHub";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "amount",
        type: "uint256",
      },
      {
        name: "dest",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "paymasterMaxAcceptanceBudget",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                name: "from",
                type: "address",
              },
              {
                name: "to",
                type: "address",
              },
              {
                name: "value",
                type: "uint256",
              },
              {
                name: "gas",
                type: "uint256",
              },
              {
                name: "nonce",
                type: "uint256",
              },
              {
                name: "data",
                type: "bytes",
              },
              {
                name: "validUntil",
                type: "uint256",
              },
            ],
            name: "request",
            type: "tuple",
          },
          {
            components: [
              {
                name: "gasPrice",
                type: "uint256",
              },
              {
                name: "pctRelayFee",
                type: "uint256",
              },
              {
                name: "baseRelayFee",
                type: "uint256",
              },
              {
                name: "relayWorker",
                type: "address",
              },
              {
                name: "paymaster",
                type: "address",
              },
              {
                name: "forwarder",
                type: "address",
              },
              {
                name: "paymasterData",
                type: "bytes",
              },
              {
                name: "clientId",
                type: "uint256",
              },
            ],
            name: "relayData",
            type: "tuple",
          },
        ],
        name: "relayRequest",
        type: "tuple",
      },
      {
        name: "signature",
        type: "bytes",
      },
      {
        name: "approvalData",
        type: "bytes",
      },
      {
        name: "externalGasLimit",
        type: "uint256",
      },
    ],
    name: "relayCall",
    outputs: [
      {
        name: "paymasterAccepted",
        type: "bool",
      },
      {
        name: "returnValue",
        type: "bytes",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "manager",
        type: "address",
      },
    ],
    name: "workerCount",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "relayManager",
        type: "address",
      },
    ],
    name: "isRelayManagerStaked",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "maximumRecipientDeposit",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "target",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "minimumUnstakeDelay",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "stakeManager",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "baseRelayFee",
        type: "uint256",
      },
      {
        name: "pctRelayFee",
        type: "uint256",
      },
      {
        name: "url",
        type: "string",
      },
    ],
    name: "registerRelayServer",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "gasOverhead",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "gasUsed",
        type: "uint256",
      },
      {
        components: [
          {
            name: "gasPrice",
            type: "uint256",
          },
          {
            name: "pctRelayFee",
            type: "uint256",
          },
          {
            name: "baseRelayFee",
            type: "uint256",
          },
          {
            name: "relayWorker",
            type: "address",
          },
          {
            name: "paymaster",
            type: "address",
          },
          {
            name: "forwarder",
            type: "address",
          },
          {
            name: "paymasterData",
            type: "bytes",
          },
          {
            name: "clientId",
            type: "uint256",
          },
        ],
        name: "relayData",
        type: "tuple",
      },
    ],
    name: "calculateCharge",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "target",
        type: "address",
      },
    ],
    name: "depositFor",
    outputs: [],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "postOverhead",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "newRelayWorkers",
        type: "address[]",
      },
    ],
    name: "addRelayWorkers",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "penalizer",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "worker",
        type: "address",
      },
    ],
    name: "workerToManager",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "versionHub",
    outputs: [
      {
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "maxWorkerCount",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "relayWorker",
        type: "address",
      },
      {
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "penalize",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "minimumStake",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "gasReserve",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "relayManager",
        type: "address",
      },
      {
        indexed: false,
        name: "baseRelayFee",
        type: "uint256",
      },
      {
        indexed: false,
        name: "pctRelayFee",
        type: "uint256",
      },
      {
        indexed: false,
        name: "relayUrl",
        type: "string",
      },
    ],
    name: "RelayServerRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "relayManager",
        type: "address",
      },
      {
        indexed: false,
        name: "newRelayWorkers",
        type: "address[]",
      },
      {
        indexed: false,
        name: "workersCount",
        type: "uint256",
      },
    ],
    name: "RelayWorkersAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        name: "dest",
        type: "address",
      },
      {
        indexed: false,
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "relayManager",
        type: "address",
      },
      {
        indexed: true,
        name: "paymaster",
        type: "address",
      },
      {
        indexed: true,
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        name: "relayWorker",
        type: "address",
      },
      {
        indexed: false,
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: false,
        name: "innerGasUsed",
        type: "uint256",
      },
      {
        indexed: false,
        name: "reason",
        type: "bytes",
      },
    ],
    name: "TransactionRejectedByPaymaster",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "relayManager",
        type: "address",
      },
      {
        indexed: true,
        name: "relayWorker",
        type: "address",
      },
      {
        indexed: true,
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: false,
        name: "status",
        type: "uint8",
      },
      {
        indexed: false,
        name: "charge",
        type: "uint256",
      },
    ],
    name: "TransactionRelayed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "status",
        type: "uint8",
      },
      {
        indexed: false,
        name: "returnValue",
        type: "bytes",
      },
    ],
    name: "TransactionResult",
    type: "event",
  },
] as const;

export class IRelayHub__factory {
  static readonly abi = _abi;
  static createInterface(): IRelayHubInterface {
    return new Interface(_abi) as IRelayHubInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IRelayHub {
    return new Contract(address, _abi, runner) as unknown as IRelayHub;
  }
}
