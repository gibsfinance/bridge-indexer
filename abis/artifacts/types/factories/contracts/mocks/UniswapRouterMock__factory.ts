/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  UniswapRouterMock,
  UniswapRouterMockInterface,
} from "../../../contracts/mocks/UniswapRouterMock";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "amountOut",
        type: "uint256",
      },
      {
        name: "amountInMax",
        type: "uint256",
      },
      {
        name: "path",
        type: "address[]",
      },
      {
        name: "to",
        type: "address",
      },
      {
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactETH",
    outputs: [
      {
        name: "amounts",
        type: "uint256[]",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "WETH",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "amountIn",
        type: "uint256",
      },
      {
        name: "path",
        type: "address[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        name: "amounts",
        type: "uint256[]",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    payable: true,
    stateMutability: "payable",
    type: "fallback",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061031e806100206000396000f3006080604052600436106100565763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416634a25d94a8114610058578063ad5c4648146100ec578063d06ca61f1461012a575b005b34801561006457600080fd5b5061009c6004803590602480359160443591820191013573ffffffffffffffffffffffffffffffffffffffff6064351660843561014e565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156100d85781810151838201526020016100c0565b505050509050019250505060405180910390f35b3480156100f857600080fd5b50610101610290565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b34801561013657600080fd5b5061009c600480359060248035908101910135610294565b606086606481028686600081811061016257fe5b604080517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810186905290516020928302949094013573ffffffffffffffffffffffffffffffffffffffff16936323b872dd9350606480830193928290030181600087803b1580156101e357600080fd5b505af11580156101f7573d6000803e3d6000fd5b505050506040513d602081101561020d57600080fd5b505060405133908390600081818185875af192505050151561022e57600080fd5b60408051600280825260608201835290916020830190803883390190505092508083600081518110151561025e57fe5b60209081029091010152825182908490600190811061027957fe5b602090810290910101525090979650505050505050565b3090565b6040805160028082526060808301845292602083019080388339019050509050838160008151811015156102c457fe5b60209081029091010152606484048160018151811015156102e157fe5b6020908102909101015293925050505600a165627a7a7230582006e49fd7457ebec1cf1a2029a15be832fb20f0ae03d5eb948f09799383e3cac90029";

type UniswapRouterMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapRouterMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapRouterMock__factory extends ContractFactory {
  constructor(...args: UniswapRouterMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      UniswapRouterMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UniswapRouterMock__factory {
    return super.connect(runner) as UniswapRouterMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapRouterMockInterface {
    return new Interface(_abi) as UniswapRouterMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): UniswapRouterMock {
    return new Contract(address, _abi, runner) as unknown as UniswapRouterMock;
  }
}
