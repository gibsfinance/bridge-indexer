/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  MessageProcessor,
  MessageProcessorInterface,
} from "../../../../contracts/upgradeable_contracts/arbitrary_message/MessageProcessor";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "transactionHash",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_messageId",
        type: "bytes32",
      },
    ],
    name: "failedMessageReceiver",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_messageId",
        type: "bytes32",
      },
    ],
    name: "failedMessageSender",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "messageId",
    outputs: [
      {
        name: "id",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "messageSourceChainId",
    outputs: [
      {
        name: "id",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_messageId",
        type: "bytes32",
      },
    ],
    name: "messageCallStatus",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "messageSender",
    outputs: [
      {
        name: "sender",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_messageId",
        type: "bytes32",
      },
    ],
    name: "failedMessageDataHash",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
] as const;

export class MessageProcessor__factory {
  static readonly abi = _abi;
  static createInterface(): MessageProcessorInterface {
    return new Interface(_abi) as MessageProcessorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MessageProcessor {
    return new Contract(address, _abi, runner) as unknown as MessageProcessor;
  }
}
