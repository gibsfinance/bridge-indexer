/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  VersionableAMB,
  VersionableAMBInterface,
} from "../../../../contracts/upgradeable_contracts/arbitrary_message/VersionableAMB";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "getBridgeMode",
    outputs: [
      {
        name: "",
        type: "bytes4",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getBridgeInterfacesVersion",
    outputs: [
      {
        name: "major",
        type: "uint64",
      },
      {
        name: "minor",
        type: "uint64",
      },
      {
        name: "patch",
        type: "uint64",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
] as const;

export class VersionableAMB__factory {
  static readonly abi = _abi;
  static createInterface(): VersionableAMBInterface {
    return new Interface(_abi) as VersionableAMBInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VersionableAMB {
    return new Contract(address, _abi, runner) as unknown as VersionableAMB;
  }
}
