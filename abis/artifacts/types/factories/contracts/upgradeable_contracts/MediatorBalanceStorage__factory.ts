/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MediatorBalanceStorage,
  MediatorBalanceStorageInterface,
} from "../../../contracts/upgradeable_contracts/MediatorBalanceStorage";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "mediatorBalance",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060e08061001e6000396000f300608060405260043610603e5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416634b94f81581146043575b600080fd5b348015604e57600080fd5b5060556067565b60408051918252519081900360200190f35b7f3db340e280667ee926fa8c51e8f9fcf88a0ff221a66d84d63b4778127d97d13960009081526020527ef98556deae64bbaa11436ee534ae029e85ed112aff9b71330af4c2d320eac954905600a165627a7a7230582030616b8d51072df879a31b8e2513580303ca10129eef01a61cd17440340c596a0029";

type MediatorBalanceStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MediatorBalanceStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MediatorBalanceStorage__factory extends ContractFactory {
  constructor(...args: MediatorBalanceStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MediatorBalanceStorage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MediatorBalanceStorage__factory {
    return super.connect(runner) as MediatorBalanceStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MediatorBalanceStorageInterface {
    return new Interface(_abi) as MediatorBalanceStorageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MediatorBalanceStorage {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MediatorBalanceStorage;
  }
}
