/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  GasTokenConnector,
  GasTokenConnectorInterface,
} from "../../../contracts/upgradeable_contracts/GasTokenConnector";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "_targetMintValue",
        type: "uint256",
      },
    ],
    name: "setGasTokenTargetMintValue",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "gasTokenReceiver",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_receiver",
        type: "address",
      },
    ],
    name: "setGasTokenReceiver",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "gasToken",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "gasTokenTargetMintValue",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_targetMintValue",
        type: "uint256",
      },
      {
        name: "_receiver",
        type: "address",
      },
    ],
    name: "setGasTokenParameters",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: false,
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610581806100206000396000f30060806040526004361061008d5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166323b4a1fd81146100925780636c388e54146100ac5780638da5cb5b146100dd5780639f1ed0c7146100f2578063c91d59fe14610113578063de6e02b814610128578063ee0336141461014f578063f2fde38b14610173575b600080fd5b34801561009e57600080fd5b506100aa600435610194565b005b3480156100b857600080fd5b506100c16101fd565b60408051600160a060020a039092168252519081900360200190f35b3480156100e957600080fd5b506100c1610254565b3480156100fe57600080fd5b506100aa600160a060020a03600435166102ab565b34801561011f57600080fd5b506100c161033e565b34801561013457600080fd5b5061013d610351565b60408051918252519081900360200190f35b34801561015b57600080fd5b506100aa600435600160a060020a036024351661039f565b34801561017f57600080fd5b506100aa600160a060020a0360043516610456565b61019c610254565b600160a060020a031633146101b057600080fd5b7f7188f1264c90762deb4dbddcab803d6487a8f108fbcdec3ff08c642d35826f9f60009081526020527f508af815a456b6ded512875db9df6b2d5693ac1edc789fb62dc528b792885e5155565b7f6778a39b83358b10315b40840597142f1db77a44f312ed9c0e45ee7af3bbc55260005260026020527fd0cda424605c5e6787a1f6db37df501d2e0a58cfcd57eff91a537a67146f164f54600160a060020a031690565b7f02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c060005260026020527fb7802e97e87ef2842a6cce7da7ffaeaedaa2f61a6a7870b23d9d01fc9b73712e54600160a060020a031690565b6102b3610254565b600160a060020a031633146102c757600080fd5b7f6778a39b83358b10315b40840597142f1db77a44f312ed9c0e45ee7af3bbc55260005260026020527fd0cda424605c5e6787a1f6db37df501d2e0a58cfcd57eff91a537a67146f164f805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6eb3f879cb30fe243b4dfee438691c0490565b7f7188f1264c90762deb4dbddcab803d6487a8f108fbcdec3ff08c642d35826f9f60009081526020527f508af815a456b6ded512875db9df6b2d5693ac1edc789fb62dc528b792885e515490565b6103a7610254565b600160a060020a031633146103bb57600080fd5b7f508af815a456b6ded512875db9df6b2d5693ac1edc789fb62dc528b792885e51919091557f6778a39b83358b10315b40840597142f1db77a44f312ed9c0e45ee7af3bbc55260005260026020527fd0cda424605c5e6787a1f6db37df501d2e0a58cfcd57eff91a537a67146f164f805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03909216919091179055565b61045e610254565b600160a060020a0316331461047257600080fd5b61047b8161047e565b50565b600160a060020a038116151561049357600080fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06104bc610254565b60408051600160a060020a03928316815291841660208301528051918290030190a17f02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c060005260026020527fb7802e97e87ef2842a6cce7da7ffaeaedaa2f61a6a7870b23d9d01fc9b73712e805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a7230582052262e270f0759cfb25ba06c94c6fac271211c1c992c19e462e5fe1ba5977c180029";

type GasTokenConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GasTokenConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GasTokenConnector__factory extends ContractFactory {
  constructor(...args: GasTokenConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      GasTokenConnector & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GasTokenConnector__factory {
    return super.connect(runner) as GasTokenConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GasTokenConnectorInterface {
    return new Interface(_abi) as GasTokenConnectorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): GasTokenConnector {
    return new Contract(address, _abi, runner) as unknown as GasTokenConnector;
  }
}
