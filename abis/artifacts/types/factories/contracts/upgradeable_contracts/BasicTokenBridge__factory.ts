/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BasicTokenBridge,
  BasicTokenBridgeInterface,
} from "../../../contracts/upgradeable_contracts/BasicTokenBridge";

const _abi = [
  {
    constant: true,
    inputs: [
      {
        name: "_day",
        type: "uint256",
      },
    ],
    name: "totalSpentPerDay",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_dailyLimit",
        type: "uint256",
      },
    ],
    name: "setExecutionDailyLimit",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "getCurrentDay",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "executionDailyLimit",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_day",
        type: "uint256",
      },
    ],
    name: "totalExecutedPerDay",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "dailyLimit",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withinExecutionLimit",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "executionMaxPerTx",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "maxAvailablePerTx",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_minPerTx",
        type: "uint256",
      },
    ],
    name: "setMinPerTx",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_dailyLimit",
        type: "uint256",
      },
    ],
    name: "setDailyLimit",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_maxPerTx",
        type: "uint256",
      },
    ],
    name: "setMaxPerTx",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "decimalShift",
    outputs: [
      {
        name: "",
        type: "int256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "minPerTx",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withinLimit",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_maxPerTx",
        type: "uint256",
      },
    ],
    name: "setExecutionMaxPerTx",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "maxPerTx",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "newLimit",
        type: "uint256",
      },
    ],
    name: "DailyLimitChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "newLimit",
        type: "uint256",
      },
    ],
    name: "ExecutionDailyLimitChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: false,
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bce806100206000396000f3006080604052600436106101065763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416632bd0bb05811461010b5780633dd95d1b146101355780633e6968b61461014f57806343b37dd3146101645780634fb3fef71461017957806367eeba0c14610191578063879ce676146101a65780638aa1949a146101d25780638da5cb5b146101e757806395e54a1714610218578063a2a6ca271461022d578063b20d30a914610245578063c6f6f2161461025d578063dae5f0fd14610275578063df25f3f01461028a578063ea9f49681461029f578063f20151e1146102b7578063f2fde38b146102cf578063f968adbe146102f0575b600080fd5b34801561011757600080fd5b50610123600435610305565b60408051918252519081900360200190f35b34801561014157600080fd5b5061014d6004356103c2565b005b34801561015b57600080fd5b50610123610482565b34801561017057600080fd5b5061012361048b565b34801561018557600080fd5b506101236004356104d9565b34801561019d57600080fd5b50610123610554565b3480156101b257600080fd5b506101be6004356105a2565b604080519115158252519081900360200190f35b3480156101de57600080fd5b506101236105ec565b3480156101f357600080fd5b506101fc61063a565b60408051600160a060020a039092168252519081900360200190f35b34801561022457600080fd5b50610123610691565b34801561023957600080fd5b5061014d6004356106eb565b34801561025157600080fd5b5061014d600435610787565b34801561026957600080fd5b5061014d600435610847565b34801561028157600080fd5b506101236108df565b34801561029657600080fd5b5061012361092d565b3480156102ab57600080fd5b506101be60043561097b565b3480156102c357600080fd5b5061014d6004356109c6565b3480156102db57600080fd5b5061014d600160a060020a0360043516610a42565b3480156102fc57600080fd5b50610123610a6a565b60008060008360405160200180807f746f74616c5370656e74506572446179000000000000000000000000000000008152506010018281526020019150506040516020818303038152906040526040518082805190602001908083835b602083106103815780518252601f199092019160209182019101610362565b51815160209384036101000a600019018019909216911617905260408051929094018290039091208652850195909552929092016000205495945050505050565b6103ca61063a565b600160a060020a031633146103de57600080fd5b6103e66105ec565b8111806103f1575080155b15156103fc57600080fd5b7f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d237600090815260209081527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e4218290556040805183815290517f9bebf928b90863f24cc31f726a3a7545efd409f1dcf552301b1ee3710da70d3b929181900390910190a150565b62015180420490565b7f21dbcab260e413c20dc13c28b7db95e2b423d1135f42bb8b7d5214a92270d23760009081526020527fadd938dbd083a16bae12238cd914fca0afc7a30edb55b1cd5c7f1823f1b0e4215490565b60008060008360405160200180807f746f74616c457865637574656450657244617900000000000000000000000000815250601301828152602001915050604051602081830303815290604052604051808280519060200190808383602083106103815780518252601f199092019160209182019101610362565b7f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a560009081526020527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e5490565b6000806105c5836105b96105b4610482565b6104d9565b9063ffffffff610ab816565b9050806105d061048b565b101580156105e557506105e16105ec565b8311155b9392505050565b7fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d560009081526020527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b5490565b7f02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c060005260026020527fb7802e97e87ef2842a6cce7da7ffaeaedaa2f61a6a7870b23d9d01fc9b73712e54600160a060020a031690565b60008060008060006106a1610a6a565b93506106ab610554565b92506106bd6106b8610482565b610305565b91508183116106cd5760006106d1565b8183035b90508084106106e057806106e2565b835b94505050505090565b6106f361063a565b600160a060020a0316331461070757600080fd5b60008111801561071d575061071a610554565b81105b801561072f575061072c610a6a565b81105b151561073a57600080fd5b7fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d160009081526020527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa055565b61078f61063a565b600160a060020a031633146107a357600080fd5b6107ab610a6a565b8111806107b6575080155b15156107c157600080fd5b7f4a6a899679f26b73530d8cf1001e83b6f7702e04b6fdb98f3c62dc7e47e041a5600090815260209081527f1ab29a5cca988aee50edccdd61c5bcaa7ad4b29a03b7ee50f298ceccfe14cc4e8290556040805183815290517fad4123ae17c414d9c6d2fec478b402e6b01856cc250fd01fbfd252fda0089d3c929181900390910190a150565b61084f61063a565b600160a060020a0316331461086357600080fd5b801580610887575061087361092d565b811180156108875750610884610554565b81105b151561089257600080fd5b7f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c60009081526020527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d0955565b7f1e8ecaafaddea96ed9ac6d2642dcdfe1bebe58a930b1085842d8fc122b371ee560009081526020527fd5c78dd9468716ca9bb96be25d56436811b20aab3523a9904b12deef1cab239d5490565b7fbbb088c505d18e049d114c7c91f11724e69c55ad6c5397e2b929e68b41fa05d160009081526020527f8df5c48c6b6e11d97548adc824ba0c99103ec09830fa5d53a179984085e6eaa05490565b60008061098d836105b96106b8610482565b905080610998610554565b101580156109ad57506109a9610a6a565b8311155b80156105e557506109bc61092d565b9092101592915050565b6109ce61063a565b600160a060020a031633146109e257600080fd5b6109ea61048b565b81106109f557600080fd5b7fc0ed44c192c86d1cc1ba51340b032c2766b4a2b0041031de13c46dd7104888d560009081526020527ff8e983ee86e5e377e9e34c9131b266382c3f04113d20de077f9e12663c7a646b55565b610a4a61063a565b600160a060020a03163314610a5e57600080fd5b610a6781610acb565b50565b7f0f8803acad17c63ee38bf2de71e1888bc7a079a6f73658e274b08018bea4e29c60009081526020527f9de0f81379b4d8e60fe509315d071b56e7b732abaf193e74e0d15808b0951d095490565b81810182811015610ac557fe5b92915050565b600160a060020a0381161515610ae057600080fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0610b0961063a565b60408051600160a060020a03928316815291841660208301528051918290030190a17f02016836a56b71f0d02689e69e326f4f4c1b9057164ef592671cf0d37c8040c060005260026020527fb7802e97e87ef2842a6cce7da7ffaeaedaa2f61a6a7870b23d9d01fc9b73712e805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555600a165627a7a72305820104ea4de915af3d67986e12578c3a1d2b29a3ad5c7382cea15c78dff9cb916600029";

type BasicTokenBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BasicTokenBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BasicTokenBridge__factory extends ContractFactory {
  constructor(...args: BasicTokenBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BasicTokenBridge & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BasicTokenBridge__factory {
    return super.connect(runner) as BasicTokenBridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BasicTokenBridgeInterface {
    return new Interface(_abi) as BasicTokenBridgeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BasicTokenBridge {
    return new Contract(address, _abi, runner) as unknown as BasicTokenBridge;
  }
}
