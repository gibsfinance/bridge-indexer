/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  DecimalShiftBridge,
  DecimalShiftBridgeInterface,
} from "../../../contracts/upgradeable_contracts/DecimalShiftBridge";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "decimalShift",
    outputs: [
      {
        name: "",
        type: "int256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060e18061001e6000396000f300608060405260043610603e5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663dae5f0fd81146043575b600080fd5b348015604e57600080fd5b5060556067565b60408051918252519081900360200190f35b7f1e8ecaafaddea96ed9ac6d2642dcdfe1bebe58a930b1085842d8fc122b371ee560009081526020527fd5c78dd9468716ca9bb96be25d56436811b20aab3523a9904b12deef1cab239d54905600a165627a7a72305820f738a1bc1fd8c3e2bfd4d3d35cc3e6b7e6428a724191893207794fe625b186990029";

type DecimalShiftBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DecimalShiftBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DecimalShiftBridge__factory extends ContractFactory {
  constructor(...args: DecimalShiftBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DecimalShiftBridge & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DecimalShiftBridge__factory {
    return super.connect(runner) as DecimalShiftBridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DecimalShiftBridgeInterface {
    return new Interface(_abi) as DecimalShiftBridgeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DecimalShiftBridge {
    return new Contract(address, _abi, runner) as unknown as DecimalShiftBridge;
  }
}
