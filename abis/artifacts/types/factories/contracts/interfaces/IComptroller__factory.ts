/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IComptroller,
  IComptrollerInterface,
} from "../../../contracts/interfaces/IComptroller";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "holders",
        type: "address[]",
      },
      {
        name: "cTokens",
        type: "address[]",
      },
      {
        name: "borrowers",
        type: "bool",
      },
      {
        name: "suppliers",
        type: "bool",
      },
    ],
    name: "claimComp",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IComptroller__factory {
  static readonly abi = _abi;
  static createInterface(): IComptrollerInterface {
    return new Interface(_abi) as IComptrollerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IComptroller {
    return new Contract(address, _abi, runner) as unknown as IComptroller;
  }
}
